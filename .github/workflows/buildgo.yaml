on:
  push:
    branches:
      - main
jobs:
  get_build_version:
    runs-on: ubuntu-latest
    name: Get Build Version
    outputs:
      build_version: ${{ steps.check_build_ver.build_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Get build version
        id: check_build_ver
        run: |
          if ls -a | grep -qE '^.build_version$'; then
            if [[ -z "$(cat .build_version)" ]]; then
              echo "Build version not specified"
              exit 1
            fi
            echo "build_version=$(cat .build_version)" >> $GITHUB_OUTPUT
          else
            echo ".build_version file not found"
            exit 1
          fi
  check_build_required:
    runs-on: ubuntu-latest
    name: Check If Build Required
    outputs:
      compile_required: ${{ steps.check_changes.outputs.compile_required }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check if Go files changed
        id: check_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '*.go$' | grep -qv '_test.go$'; then
            echo "compile_required=true" >> $GITHUB_OUTPUT
          else
            echo "compile_required=false" >> $GITHUB_OUTPUT
          fi
  build_go_mods:
    needs: [get_build_version, check_build_required]
    if: needs.check_build_required.outputs.compile_required == 'true'
    runs-on: ubuntu-latest
    name: Build Go action binaries
    strategy:
      matrix:
        arch: ['amd64', 'arm64']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'
      - name: Install dependencies
        run: go get .
      - name: Build
        env:
          BUILD_VER: ${{ needs.get_build_version.outputs.build_version }}
        run: go build -o action-linux-${{ matrix.arch }}-$BUILD_VER .
      - uses: actions/upload-artifact@v4
        env:
          BUILD_VER: ${{ needs.get_build_version.outputs.build_version }} 
        with:
          name: action-linux-${{ matrix.arch }}-$BUILD_VER
          path: ./action-linux-${{ matrix.arch }}-$BUILD_VER
  commit_binaries:
    needs: [build_go_mods]
    runs-on: ubuntu-latest
    name: Commit built go binaries
    steps:
      - uses: actions/checkout@v4
      - name: getbins
        uses: actions/download-artifact@v4
        with:
          path: ./bins/
      - name: Make bins executable
        run: |
          git update-index --chmod=+x bins/*/*
      - name: Commit
        uses: EndBug/add-and-commit@v9
        with:
          message: Github Actions Go build binaries for ${{ inputs.version }}
          committer_name: Github Actions
          committer_email: actionbot@github.com
          add: 'bins/*'

